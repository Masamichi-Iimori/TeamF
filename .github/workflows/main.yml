# @Author Futa Nakayama

name: Build and Push

on:
  push:
    branches:
      - development

jobs:
  prepare:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[ci skip]')"
    steps:
      - run: echo "${{ github.event.head_commit.message }}"

  server-test:
    name: Server Test
    needs: prepare
    runs-on: ubuntu-18.04
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Get dependencies
        run: go get -v -t -d ./server

      - name: Get jsondiff
        run: go get github.com/Cside/jsondiff

      - name: Get go-shellwords
        run: go get github.com/mattn/go-shellwords

      - name: Run docker-compose # テスト実行用にdockerを起動
        run: make docker/run

      - name: Test code
        run: go test -v ./server/handler

      - name: Stop docker-compose
        run: make docker/stop

#  build-and-push:
#    name: Build and Push
#    needs: server-test
#    runs-on: ubuntu-18.04
#    timeout-minutes: 300
#
#    steps:
#      - uses: actions/checkout@v1
#
#      - name: Configure AWS Credentials
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ap-northeast-1
#
#      - name: Login to Amazon ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1

#      - name: Build, tag, and push image to Amazon ECR
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
#        run: |
#          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA ./server
#          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA